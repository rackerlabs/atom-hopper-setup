<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation=
          "http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/data/mongo
          http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- H2 -->
    <bean name="h2-feed-repository-bean" class="org.atomhopper.hibernate.HibernateFeedRepository">
        <constructor-arg>
            <map>
                <entry key="hibernate.connection.url" value="jdbc:h2:/opt/atomhopper/atom-hopper-db" />
                <entry key="hibernate.connection.driver_class" value="org.h2.Driver" />
                <entry key="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />
                <entry key="hibernate.connection.username" value="sa" />
                <entry key="hibernate.connection.password" value="" />

                <entry key="hibernate.hbm2ddl.auto" value="update" />
                <!-- <entry key="hibernate.show_sql" value="false" /> -->
            </map>
        </constructor-arg>
    </bean>
    <bean name="h2-feed-source" class="org.atomhopper.hibernate.adapter.HibernateFeedSource">
        <property name="feedRepository" ref="h2-feed-repository-bean" />
    </bean>
    <bean name="h2-feed-publisher" class="org.atomhopper.hibernate.adapter.HibernateFeedPublisher">
        <property name="feedRepository" ref="h2-feed-repository-bean" />
    </bean>

    <!-- Postgresql -->
    <!--
    <bean name="postgresql-feed-repository-bean" class="org.atomhopper.hibernate.HibernateFeedRepository">
        <constructor-arg>
            <map>
                <entry key="hibernate.connection.driver_class" value="org.postgresql.Driver" />
                <entry key="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect" />
                <entry key="hibernate.connection.url" value="jdbc:postgresql://localhost:5432/atomhopper" />
                <entry key="hibernate.connection.username" value="postgres" />
                <entry key="hibernate.connection.password" value="password" />

                <entry key="hibernate.hbm2ddl.auto" value="update" />
                --><!-- <entry key="hibernate.show_sql" value="false" /> --><!--
            </map>
        </constructor-arg>
    </bean>
    <bean name="postgresql-feed-source" class="org.atomhopper.hibernate.adapter.HibernateFeedSource">
        <property name="feedRepository" ref="postgresql-feed-repository-bean" />
    </bean>
    <bean name="postgresql-feed-publisher" class="org.atomhopper.hibernate.adapter.HibernateFeedPublisher">
        <property name="feedRepository" ref="postgresql-feed-repository-bean" />
    </bean>
    -->

    <!-- MySQL -->
    <!--
    <bean name="mysql-feed-repository-bean" class="org.atomhopper.hibernate.HibernateFeedRepository">
        <constructor-arg>
            <map>
                <entry key="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver" />
                <entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
                <entry key="hibernate.connection.url" value="jdbc:mysql://localhost:8889/atomhopper?createDatabaseIfNotExist=true" />
                <entry key="hibernate.connection.username" value="root" />
                <entry key="hibernate.connection.password" value="root" />

                <entry key="hibernate.hbm2ddl.auto" value="update" />
                --><!-- <entry key="hibernate.show_sql" value="false" /> --><!--
            </map>
        </constructor-arg>
    </bean>
    <bean name="mysql-feed-source" class="org.atomhopper.hibernate.adapter.HibernateFeedSource">
        <property name="feedRepository" ref="mysql-feed-repository-bean" />
    </bean>
    <bean name="mysql-feed-publisher" class="org.atomhopper.hibernate.adapter.HibernateFeedPublisher">
        <property name="feedRepository" ref="mysql-feed-repository-bean" />
    </bean>
    -->

    <!-- MongoDB -->
    <mongo:mongo host="localhost" port="27017"/>
    <bean name="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongo"/>
        <constructor-arg name="databaseName" value="atomhopper"/>
    </bean>
    <bean name="mongo-feed-publisher" class="org.atomhopper.mongodb.adapter.MongodbFeedPublisher">
        <property name="mongoTemplate" ref="mongoTemplate" />
    </bean>
    <bean name="mongo-feed-source" class="org.atomhopper.mongodb.adapter.MongodbFeedSource">
        <property name="mongoTemplate" ref="mongoTemplate" />
    </bean>
    
</beans>


